name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:7-jammy
        ports:
          - 27017:27017

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Build shared package
      run: pnpm --filter shared build

    - name: Lint
      run: pnpm -w lint

    - name: Type check
      run: |
        pnpm --filter backend run build
        pnpm --filter frontend run type-check

    - name: Run backend tests
      run: pnpm --filter backend test
      env:
        NODE_ENV: test
        MONGO_URL: mongodb://localhost:27017/humanet-test
        JWT_SECRET: test-secret
        FRONTEND_URL: http://localhost:3000

    - name: Build frontend
      run: pnpm --filter frontend build
      env:
        NEXT_PUBLIC_API_URL: http://localhost:4000/api

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build backend image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: backend/Dockerfile
        push: false
        tags: humanet-backend:latest

    - name: Build frontend image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: frontend/Dockerfile
        push: false
        tags: humanet-frontend:latest
